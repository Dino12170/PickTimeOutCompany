
@model IEnumerable<PickTimeOutCompany.Models.VehicleDispatchModel>
@{
    ViewBag.Title = "VehicleDispatch";
}

<link rel="stylesheet" href="https://cdn.datatables.net/1.13.1/css/jquery.dataTables.min.css">
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.1/js/jquery.dataTables.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<!-- Bootstrap & Datepicker CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">

<style>
    #datepicker {
        width: 180px;
        cursor: pointer;
        /*font-family: Arial, sans-serif;*/ /* Chọn font chữ */
        /*font-size: 20px;*/ /* Kích thước chữ */
        /*font-weight: 700;*/ /* Đậm hơn nếu cần */
        /*text-align: center;*/ /* Căn giữa chữ */
    }

    .date-container {
        display: inline-flex;
        align-items: center;
        gap: 10px; /* Tạo khoảng cách giữa label và datepicker */
    }

    input.form-control {
        font-weight: bold;
        font-size: medium;
        width: 150px;
        font-style: inherit;
        color: #333;
    }
</style>


<style>
    .custom-date {
        width: 170px;
        height: 28px;
        padding: 8px;
        font-size: 18px;
        border-radius: 5px;
        font-weight: initial;
        font-style: italic;
    }

        .custom-date:focus {
            outline: none;
            border-color: #28a745;
            box-shadow: 0 0 5px rgba(40, 167, 69, 0.5);
        }

    #formattedDate {
        display: block;
        margin-top: 5px;
        font-size: 16px;
        font-weight: bold;
        color: #007bff;
    }

    .text-title {
        margin-top: 15px;
        font-weight: bolder;
        font-size: 16px;
    }

    button {
        font-size: 18px;
        width: 80px;
        height: 40px;
    }

    .container {
        width: 100%;
    }

    .img-left {
        border: 1px solid;
        display: flex;
        align-items: center;
        background-color: darkgray;
        height: 250px;
        flex-direction: column;
        justify-content: center;
    }

    .img-right {
        border: 1px solid;
        display: flex;
        align-items: center;
        background-color: darkgray;
        height: 250px;
        margin-left: 5px;
        flex-direction: column;
        justify-content: center;
    }

    .are-search {
        padding: 20px 0 20px 0;
    }

    .close {
        width: 0px !important;
    }


    #table-id {
        overflow-x: auto;
    }

    .card {
        display: none;
    }

    footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        background-color: #000;
        font-size: 12px;
        color: #328da8;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 14px;
        height: 20px;
    }

    p {
        font-family: monospace;
        animation: color-change 1s infinite;
        margin: 0 !important;
    }

    .fetched-data {
        width: 100%;
    }

    .title {
        text-align: center;
        margin-bottom: 30px;
        font-size: 40px;
    }

    .container {
        width: 100%;
    }

    body {
        background-color: #eee;
        height: 30px !important;
    }

    table th, table td {
        text-align: center;
        border-left: 1px solid #ddd;
    }

    tbody td:last-child {
        border-right: 1px solid #ddd;
    }

    table.dataTable.no-footer {
        border-bottom: 1px solid #ddd !important;
    }

    table tbody tr.selected td {
        background-color: hotpink;
        color: red;
    }

    table tr:nth-child(even) {
        background-color: #e4e3e3
    }

    th {
        background: rgb(17, 114, 140);
        color: #fff;
        border-left: 1px solid #ddd;
        text-align: center !important;
    }

    .pagination {
        margin: 0;
    }

        .pagination li:hover {
            cursor: pointer;
        }

    .header_wrap {
        padding: 30px 0;
    }

    .tb_search {
        width: 20%;
        float: right;
    }

    .pagination-container {
        width: 70%;
        float: left;
    }

    .rows_count {
        width: 20%;
        float: right;
        text-align: right;
        color: #999;
    }

    p {
        position: absolute;
        white-space: nowrap;
        animation: floatText 15s infinite alternate-reverse ease-in-out;
        animation-timing-function: linear;
        color: white;
        animation-iteration-count: 1;
    }

    @@-webkit-keyframes floatText {
        from {
            left: 40%;
        }

        to {
            /* left: auto; */
            left: 00%;
        }
    }

    .clear-btn {
        display: flex;
        justify-content: flex-end;
        padding-right: 30px;
        width: 120px;
    }



    .change-locator {
        display: flex;
        justify-content: flex-end;
        padding-right: 30px;
        width: 120px;
    }


    .form-label {
        padding-left: 20px;
    }

    h2 {
        display: flex;
        justify-content: left;
    }

    label {
        font-size: 20px;
    }

    input {
        block-size: 20px;
    }

    #table-id-2 {
        overflow-y: scroll !important;
        max-height: 100px !important;
    }

    .table-wrapper {
        max-height: 270px;
        display: inline-block;
        width: 100%;
        overflow: auto;
    }

        .table-wrapper thead th {
            position: sticky;
            top: 0;
            z-index: 1;
        }

    .table-data {
        max-height: 300px;
        display: inline-block;
        width: 100%;
        overflow: auto;
        height: 350px;
        padding-bottom: 20px;
    }

        .table-data thead th {
            position: sticky;
            top: 0;
            z-index: 1;
        }

    .modal-header .close {
        margin-top: -2px;
        display: flex;
        justify-content: flex-end;
        padding-top: 8px;
    }

    .modal-header {
        background-color: rgb(210, 225, 250);
    }

    #show-data {
        margin-left: 20px;
    }

    #receiptno, #locatorBlock, #StockId {
        max-width: 350px;
    }

    .not-data {
        background: rgb(153, 189, 199) !important;
    }

    body {
        padding-top: 0 !important;
        display: block !important;
    }
</style>

<div class="container-fluid">
    <div style="display: flex; justify-content: center; align-items: center; color: black;">
        <h2>外幹日常下班車輛登記</h2>
    </div>
</div>

@{
    string usernameinView = ViewBag.username;
    string userIDinView = ViewBag.userID;
}
<h4> @usernameinView - @userIDinView </h4>
<div>
    @{var today = DateTime.Now.ToString("yyyy/MM/dd");}
    <div class="container">
        <div class="date-container">
            <label>日期:</label>
            <div id="datepicker" class="input-group date">
                <input class="form-control" type="text" readonly/>
                <span class="input-group-addon"><i class="fas fa-calendar-alt"></i></span>
            </div>
        </div>
    </div>
</div>

<br />
<div style="display: flex; justify-content: space-between; gap: 20px; margin-bottom: 15px;">
    <div style="margin-left:40px;">
        <div id="divTime">
            <div style="display: flex;">
                <label style="width:60px;">班次:</label>
                <div id="listTime"></div>
            </div>
        </div>

        <div id="divAddress">
            <!-- Tạo khoảng cách giữa 2 nhóm -->
            <div style="display: flex;">
                <label style="width:60px;">地點:</label>
                <div id="listAddress"></div>
            </div>
        </div>
        <div style="display:flex;">
            <label for="supermarket" style="width:60px">超市:</label>
            <label style="width:140px;"><input type="checkbox" id="supermarket" name="supermarket" style="width:20px;"> <label>(誠達下車)</label></label>
        </div>

        <div style="margin-top: 20px; display:flex; gap:10px;">
            <!-- Div chứa hai button -->
            <button id="btnOK" style="padding: 10px 20px; background-color: #11728c; color: white; border: none; border-radius: 5px; cursor: pointer; ">
                OK
            </button>
            <button id="btnUpdate" style="padding: 10px 20px; background-color: #11728c; color: white; border: none; border-radius: 5px; cursor: pointer; ">
                Edit
            </button>
            <label id="updateStatus" style="display:none; font-size:30px">登記成功</label>
        </div>
    </div>
</div>

<br />
<div class="container-fluid" style="border: 2px solid white; padding: 10px; border-radius: 20px; overflow: hidden;">
    <table id="reportTable" class="table" style="border-radius: 0px; border: 2px solid white;">
        <thead style="position: sticky; top: 0; z-index: 1; height: 30px; line-height: 30px; background-color: #7F886A; text-align: center;">
            <tr style="text-align: center; color: white; ">
                <th class="border border-white" style="text-align: center;">Date Out</th>
                <th class="border border-white" style="text-align: center;">Time Out</th>
                <th class="border border-white" style="text-align: center;">Address</th>
                <th class="border border-white" style="text-align: center; width: 60px">SUPERMARKET</th>
                <th class="border border-white" style="text-align: center">User ID</th>
                <th class="border border-white" style="text-align: center;">User Name</th>
                <th class="border border-white" style="text-align: center">UDT</th>
            </tr>
        </thead>
        <tbody style="font-size: 15px; color: black;" id="dataBody"></tbody>
    </table>
</div>
@section Scripts{
    <script>
        var selectedDate = "@today";
        $(document).ready(function () {
            var today = new Date();  // Lấy ngày hiện tại
            selectDateButton(selectedDate);
            updateTable();
        });

        //hiện dữ liệu lên bảng sau khi insert (update)
        function updateTable() {
            $.ajax({
                url: '/VehicleDispatch/GetTableData',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    var tableBody = $('#dataBody');
                    tableBody.empty();
                    $.each(data, function (index, item) {
                        var row = `<tr style="text-align: center;">
                                                                    <td>${item.DATE_OUT}</td>
                                                                    <td>${item.TIME_OUT}</td>
                                                                    <td>${item.ADDRESS}</td>
                                                                    <td>${item.SUPERMARKET}</td>
                                                                    <td>${item.USER_NAME}</td>
                                                                    <td>${item.DESCRIPTION}</td>
                                                                    <td>${item.UDT}</td>
                                                                </tr>`
                        tableBody.append(row);
                    });
                },
                error: function () {
                    alert("Error at updateTable(): There aren't datas!");
                }
            });
        }

        //Lựa chọn 1 button trong 1 group radio button -> xử lý trường hợp lấy dữ liệu từ database và cần hiển thị lên view
        function setRadioValue(elementName, value) {
            let radios = document.getElementsByName(elementName);

            for (let radio of radios) {
                if (radio.value === value) {
                    radio.checked = true;
                    return true; // Trả về true nếu đặt thành công
                }
            }
            return false; // Trả về false nếu không tìm thấy giá trị trùng khớp
        }

        //Kiểm tra trong 1 group radio button, đã có button nào selected hay chưa -> kiểm tra xem có đủ giá trị để insert hay không
        function checkRadio(elementName) {
            let selectedRadio = document.querySelector(`input[name="${elementName}"]:checked`);
            return selectedRadio === null;
        }

        //truyền vào tên của group radio button, lấy ra giá trị đã lựa chọn -> lấy giá trị đã chọn để truyền qua Controller -> insert vào database
        function getSelectedRadioValue(elementName) {
            let selectedRadio = document.querySelector(`input[name="${elementName}"]:checked`);
            return selectedRadio ? selectedRadio.value : null;
        }

        //Kiểm tra xem có check đi siêu thị hay không, trả ra Y or N
        function checkCheckbox() {
            var checkbox = document.getElementById("supermarket");
            return checkbox.checked ? "Y" : "N";
        }

        //Mỗi lần chọn 1 ngày, cần kiểm tra có phải t7 hay ko, dựa vào đó để thêm các radio button tương ứng,
        //và phải set sự kiện lại cho từng radio button(vì sự kiện set trong document.ready() chỉ set 1 lần khi document đã load xong, nếu xóa đi và thêm lại, sự kiện sẽ ko được giữ lại)
        function selectDateButton(date) {
            var dateParts = date.split("/");
            var dateSelected = new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);
            //Thêm lại các radio button
            $("#listTime").empty();
            $("#listAddress").empty();
            if (dateSelected.getDay() === 6) {
                $("#listTime").append('<label style="width:140px;"><input type="radio" name="time" id="time1" value="17:10" style="width:20px;"> <label for="time1">17:10</label></label>');
                $("#listTime").append('<label style="width:140px;"><input type="radio" name="time" id="time2" value="20:00" style="width:20px;"> <label for="time2">20:00</label></label>');
            }
            else {
                $("#listTime").append('<label style="width:140px;"><input type="radio" name="time" id="time1" value="17:50" style="width:20px;"> <label for="time1">17:50</label></label>');
                $("#listTime").append('<label style="width:140px;"><input type="radio" name="time" id="time2" value="19:00" style="width:20px;"> <label for="time2">19:00</label></label>');
                $("#listTime").append('<label style="width:140px;"><input type="radio" name="time" id="time3" value="20:30" style="width:20px;"> <label for="time3">20:30</label></label>');
            }
            $("#listAddress").append('<label style="width:140px;"><input type="radio" name="address" id="address1" value="THANH DAT" style="width:20px;"> <label for="address1">誠達</label></label>');
            $("#listAddress").append('<label style="width:140px;"><input type="radio" name="address" id="address2" value="BAO SON" style="width:20px;"> <label for="address2">寶山</label></label>');
            $("#listAddress").append('<label style="width:140px;"><input type="radio" name="address" id="address3" value="TIEN LOC" style="width:20px;"> <label for="address3">近禄</label></label>');

            //Tạo lại sự kiện
            document.querySelectorAll('input[name="time"]').forEach(radio => {
                radio.addEventListener("change", function () {
                    if (this.checked) {
                        if (radio.id === "time1") {
                            document.getElementById("supermarket").disabled = true;
                        }
                        else if (getSelectedRadioValue("address") !== "THANH DAT") {
                            document.getElementById("supermarket").disabled = false;
                        }
                    }
                });
            });
            document.querySelectorAll('input[name="address"]').forEach(radio => {
                radio.addEventListener("change", function () {
                    if (this.checked) {
                        if (radio.id === "address1") {
                            document.getElementById("supermarket").disabled = true;
                        }
                        else if (getSelectedRadioValue("time") !== "17:50" && getSelectedRadioValue("time") !== "17:10") {
                            document.getElementById("supermarket").disabled = false;
                        }
                    }
                });
            });
            document.getElementById("supermarket").addEventListener("change", function () {
                if (this.checked) {
                    document.getElementById("time1").disabled = true;
                    document.getElementById("address1").disabled = true;
                }
                else {
                    document.getElementById("time1").disabled = false;
                    document.getElementById("address1").disabled = false;
                }
            });

            //Dựa vào dữ liệu lấy được từ database, set trạng thái và giá trị cho các button
            $.ajax({
                url: "/VehicleDispatch/getSelectedbyDate",
                type: "GET",
                data: { date_out: date },
                dataType: "json",
                success: function (result) {
                    if (result.length === 0) {
                        document.querySelectorAll('input[name="time"]').forEach(radio => {
                            radio.disabled = false;
                            radio.checked = false
                        });
                        document.querySelectorAll('input[name="address"]').forEach(radio => {
                            radio.disabled = false;
                            radio.checked = false
                        });
                        document.getElementById("btnUpdate").style.display = "none";
                        document.getElementById("btnOK").style.display = "block";
                        document.getElementById("supermarket").checked = false;
                        document.getElementById("supermarket").disabled = false;
                    }
                    else {
                        result.forEach(item => {
                            let selectedAddress = item.Address;
                            setRadioValue("address", selectedAddress);
                            let selectedTimout = item.Time;
                            setRadioValue("time", selectedTimout);
                            if (item.Supermarket === "Y") {
                                document.getElementById("supermarket").checked = true; // Nếu Y, checkbox sẽ được check
                            }
                            else {
                                document.getElementById("supermarket").checked = false;
                            }
                        });
                        document.querySelectorAll('input[name="time"]').forEach(radio => {
                            radio.disabled = true;
                        });
                        document.querySelectorAll('input[name="address"]').forEach(radio => {
                            radio.disabled = true;
                        });
                        document.getElementById("supermarket").disabled = true;
                        document.getElementById("btnOK").style.display = "none";
                        document.getElementById("btnUpdate").style.display = "block";
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error at function selectDateButton(date):", error);
                }
            });
        };

        //Cài đặt properties và events cho datepicker
        $(function () {
            $("#datepicker").datepicker(
                {
                    format: "yyyy/mm/dd",
                    autoclose: true,
                    todayHighlight: true,
                    startDate: new Date()
                }).datepicker('update', new Date());
            $("#datepicker").on('changeDate', function (e) {
                selectedDate = e.format(0, "yyyy/mm/dd"); // Lấy ngày đã chọn
                selectDateButton(selectedDate);
                //console.log("Selected Date:", selectedDate);  // Hiển thị trong console
            });
        });

        //Xử lý sau khi người dùng click button OK
        document.getElementById("btnOK").addEventListener("click", function () {
            if (checkRadio("time")) {
                alert("Please select Time Out!");
            }
            else if (checkRadio("address")) {
                alert("Please select address!");
            }
            else {
                $.ajax({
                    url: "/VehicleDispatch/InsertData",
                    type: "GET", // Gửi bằng phương thức GET
                    data: { timeout: getSelectedRadioValue("time"), address: getSelectedRadioValue("address"), checkbox: checkCheckbox(), selectedDate: selectedDate },
                    dataType: "json",
                    success: function (result) {
                        if (result.redirectUrl != null) {
                            window.location.href = result.redirectUrl;
                        }
                        document.getElementById("updateStatus").style.display = "block";
                        document.getElementById("updateStatus").style.color = "green";
                        document.querySelectorAll('input[name="time"]').forEach(radio => {
                            radio.disabled = true;
                        });
                        document.querySelectorAll('input[name="address"]').forEach(radio => {
                            radio.disabled = true;
                        });
                        document.getElementById("supermarket").disabled = true;
                        document.getElementById("btnUpdate").style.display = "block";
                        document.getElementById("btnOK").style.display = "none";
                        //console.log("Update successfully.");
                        updateTable();
                    },
                    error: function (xhr, status, error) {
                        console.error("Lỗi thêm dữ liệu:", error);
                    }
                });
            }
        });

        //Xử lý sau khi người dùng click button Update
        document.getElementById("btnUpdate").addEventListener("click", function () {
            document.querySelectorAll('input[name="time"]').forEach(radio => {
                radio.disabled = false;
            });
            document.querySelectorAll('input[name="address"]').forEach(radio => {
                radio.disabled = false;
            });
            document.getElementById("supermarket").disabled = false;
            document.getElementById("btnUpdate").style.display = "none";
            document.getElementById("updateStatus").style.display = "none";
            document.getElementById("btnOK").style.display = "block";
            if (document.getElementById("supermarket").checked) {
                document.getElementById("time1").disabled = true;
                document.getElementById("address1").disabled = true;
            }
            if (document.getElementById("time1").checked) {
                document.getElementById("supermarket").disabled = true;
            }
            if (document.getElementById("address1").checked) {
                document.getElementById("supermarket").disabled = true;
            }
            //document.querySelectorAll("input[name='time']").forEach(radio => radio.checked = false);
        });

    </script>
    <!-- jQuery & Bootstrap Datepicker -->
    <script src="https://code.jquery.com/jquery-3.6.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
    <script>

    </script>
}